<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>LiveViewEdgeToEdge</key>
	<true/>
	<key>LiveViewMode</key>
	<string>VisibleByDefault</string>
	<key>Name</key>
	<string>Name</string>
	<key>PlaygroundLoggingMode</key>
	<string>Off</string>
	<key>Version</key>
	<string>1.0</string>
	<key>UserModuleSourceFilesToOpen</key>
	<array>
		<string>UserModules/MyFiles.playgroundmodule/Sources/Crystals.swift</string>
		<string>UserModules/MyFiles.playgroundmodule/Sources/CaveGlitter.swift</string>
		<string>UserModules/MyFiles.playgroundmodule/Sources/GraphicCluster.swift</string>
		<string>UserModules/MyFiles.playgroundmodule/Sources/GraphicLoops.swift</string>
		<string>UserModules/MyFiles.playgroundmodule/Sources/ToneGenerator.swift</string>
	</array>
	<key>UserModuleCodeCompletionDirectives</key>
	<array>
		<string>everything, hide</string>
		<string>description, hide, &quot;(hue: CGFloat, saturation: CGFloat, brightness: CGFloat, alpha: CGFloat)&quot;, &quot;(x: CGFloat, y: CGFloat)&quot;, &quot;(x: Float, y: Float)&quot;, &quot;(width: CGFloat, height: CGFloat)&quot;, &quot;(width: Float, height: Float)&quot;, &quot;(point: CGPoint)&quot;</string>
		<string>identifier, hide, proxy, listener</string>
		<string>keyword, show, for, func, if, let, var, while, in</string>
		<string>currentmodule, show</string>
		<string>module, show, MyFiles</string>
		<string>snippet, show, repeat, switch, protocol, enum, struct, class, return</string>
		<string>literal, show, array, boolean, color, dictionary, image, string, integer, nil</string>
		<string>identifier, show, public, super, init, override, !, !=, (, (), (hue:saturation:brightness:alpha:), (image:), (sound:), (x:y:), ), *, +, +=, -, -=, -&gt;, ., /, :, &lt;, =, &gt;, Color, Double, Graphic, Image, Instrument, Int, Kind, Loop, Music, Point, Point(x:y:), Scene, Shape, Size, Sound, Touch, _:, _:at:, _:blend:, _:note:volume:, _:volume:, addCaveGlitter(count:color:gradientColor:at:), addGraphicCluster(image:sounds:at:), addGraphicLoops(image:sounds:at:), addInstrument(image:color:at:), addTones(image:at:), after:, alpha, append(_:), availableNotes, backgroundColor, backgroundImage, bassGuitar, bassSynth, black, blue, brown, by:duration:, cave, circle(radius:), circle(radius:color:gradientColor:), clear, createCrystal(image:sound:), crystalSynth, cyan, darkGray, duration:, electricGuitar, fadeIn(after:), fadeOut(after:), from(_:), glow(), glow(radius:period:count:), gray, green, height, hue:saturation:brightness:alpha:, image, image:, image:color:at:, image:sound:, image:sounds:at:, image:sounds:color:at:, in:, init(id:graphicType:name:), init(image:name:), init(shape:color:gradientColor:name:), init(width:height:), isGridVisible, lab, length, lightGray, magenta, onFingerMovedHandler, onTapHandler, orange, ount:color:gradientColor:at:, period:count:, pi, piano, place(_:at:), playInstrument(_:note:volume:), playMusic(_:volume:), playSound(_:volume:), playing, polygon(radius:sides:), position, pulsate(period:count:), purple, radius:color:gradientColor:, radius:period:count:, radius:points:sharpness:, radius:sides:, random(in:), rectangle(width:height:cornerRadius:), red, rotation, scale, scale(by:duration:), scale(to:duration:), scene, setOnFingerMovedHandler(_:), setOnTapHandler, setTintColor(_:blend:), sevenSynth, shake(duration:), size, sound, sound:, sqrt(), star(radius:points:sharpness:), to:duration:, toggle(), turtle, underwater, volume, warmBells, white, width, width:height:cornerRadius:, x, x:y:, y, yellow, {, }, boops, boops2, brokenGlass, drill, email, explosion, explosion2, galacticChime, galacticHorns, galacticSonar, galacticTelephone, gentle, getReady, glassClink, labBeats, labBeats2, printer, slime, spaceCarnival, spaceHorns, spaceInvadors, spaceTrance, teslaCoil, tuneIn, A1, A2, A3, A4, A5, AS1, AS2, AS3, AS4, AS5, B1, B2, B3, B4, B5,  C1, C2, C3, C4, C5, CS1, CS2, CS3, CS4, CS5, D1, D2, D3, D4, D5, DS1, DS2, DS3, DS4, DS5, E1, E2, E3, E4, E5, F1, F2, F3, F4, F5, FS1, FS2, FS3, FS4, FS5, G1, G2, G3, G4, G5, GS1, GS2, GS3, GS4, GS5</string>
	</array>
</dict>
</plist>
